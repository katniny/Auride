keeping track of what i did so i can make an update log later
yes, also the technical details:

## technical
- Start utilizing .env file
    - This allows us to not have to not replace our Firebase config
    each time there's a change, and prevents accidental API keys
    committing.
- Start utilizing Vite and its modular JavaScript files
    - This allows us to utilize amazing work from the JavaScript community,
    letting us made Auride better, and faster.
    - Modular JavaScript files will allow us to catch bugs faster, as modular
    JavaScript files are a lot more restrictive and verbose.
- Checking signed in/out status is quicker
    - Auride no longer waits for the entire page to load before redirecting
    if signed in/out. Auride will now await to see the users logged in status
    before doing the appropriate action, if any is necessary at all, even if
    the page isn't fully loaded yet.
- Set up the Vercel server hosting
    - Auride now takes advantage of Vercel Serverless Functions to host our APIs, to make Auride much more 
    secure, faster, and expandable. https://vercel.com/docs/functions
- JavaScript is now modularized (Related to "Start utilizing Vite and its modular JavaScript files")
    - Auride now has all its code seperated into several files, rather than having all our code in
    one huge file. This makes Auride easier to work with, but also will less likely result in several
    things breaking when one thing does, which was the previous behavior. This includes things such as
    making our sidebar modular.
- Checking signed in/out status can be interrupted
    - On pages that have these scripts, they can now be interrupted if it is not necessary when a
    user first signs in. This is used on the registration page to ensure that we do not kick the
    user out of the registration process because they're signed in.
- Registration steps are modularized
    - Adding a new registration step--while shouldn't be necessary--is now a lot easier to do,
    as groundwork has been set to do so, which is used in the profile picture and finished
    steps.
- Changing user profile details will now properly check for invalid requests
    - Example: If a user requests to change their username and it's something like " 0 9390 # 302",
    it will fail even if the user somehow bypasses client restrictions, which was not
    previous behavior. This will be the case for all user profile cases (e.g., display name,
    username, pronouns, profile picture, etc., etc.)
- Fixed bug where multiple old profile pictures would stay stored
    - While not an issue on the user end, Auride had a bug for a while where when a user changed their
    profile picture, it would not properly remove old ones. It now handles this properly on the server-side.

## user end
- Added reset password to the login page
    - Truly revoluntary feature, I know, but, Auride has been lacking this feature for
    a long time now. You were honestly SOL if you didn't know your password.
    Now it's not a worry! Unless you don't know your email...
- Registration now happens all on one page
    - The previous behavior was that everything would happen on seperate pages,
    which caused a page reload each time which caused registration to be slower.
- Added welcome animation
    - When you sign up for Auride, you will now get a welcome message before
    completing the onboarding process (setting your names, pronouns, etc., etc.)
- Fixed visual bug related to character limits
    - Auride would say that you were 1 character above the character limit
    (e.g. 26/25) if you continued typing once the limit was reached, while 
    this was not the case whatsoever.
- Added confirmation for profile picture uploading
    - When uploading your profile picture, Auride will now confirm if you
    are sure that you are using the profile picture you want. If you confirm,
    it will upload your profile picture. If you cancel, it will not use that profile
    picture.
- Twitter/X links are now Bluesky links
    - A while ago, we depreciated Twitter/X as a supported platform, but Auride's links
    never reflected this, but now, Twitter/X links were replaced by Bluesky, as it is a
    supported platform.
- Themes are now cached
    - On the previous versions of Auride, each page load would cause the screen to go
    to the default theme, then to your preferred theme, causing your screen to flash. 
    Now, Auride caches your theme and it will be loaded immediately so your colors 
    aren't jumping around.